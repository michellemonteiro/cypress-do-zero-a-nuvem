// ‚ú¶ cypress/support/commands.js ‚ú¶ //

//ü§ñ Comandos customizados do Cypress
//ü§ñ Documenta√ß√£o: https://docs.cypress.io/api/cypress-api/custom-commands

// ü§ñ Comando customizado para preencher os campos obrigat√≥rios e enviar o formul√°rio. Este comando pode ser reutilizado em v√°rios testes para evitar repeti√ß√£o de c√≥digo e garantir que os campos obrigat√≥rios sejam sempre preenchidos corretamente antes do envio.
//‚ùÑÔ∏é Uso: cy.fillMandatoryFieldsAndSubmit()
// ‚ùÑÔ∏é Preenche os campos: Nome, Sobrenome, E-mail, Mensagem e clica no bot√£o Enviar. Depois, verifica se a mensagem de sucesso √© exibida. Certifique-se de que os IDs dos campos correspondem aos do formul√°rio em teste. Adicione este comando ao arquivo commands.js para que esteja dispon√≠vel globalmente em todos os testes Cypress.

// Cypress.Commands.add('fillMandatoryFieldsAndSubmit', () => {
//     cy.get('#firstName').type('Michelle')
//     cy.get('#lastName').type('Alves')
//     cy.get('#email').type('teste@teste.com')
//     cy.get('#open-text-area').type('Teste')
//     cy.contains('Enviar').click()
// })

//‚ú¶ cypress/support/commands.js - vers√£o com dados din√¢micos para o comando customizado ‚ú¶ //

// ü§ñ Comando customizado para preencher os campos obrigat√≥rios e enviar o formul√°rio com dados din√¢micos.
//‚ùÑÔ∏é Uso: cy.fillMandatoryFieldsAndSubmit({ firstName: 'Nome', lastName: 'Sobrenome', email: '
//‚ùÑÔ∏é Preenche os campos: Nome, Sobrenome, E-mail, Mensagem e clica no bot√£o Enviar. Depois, verifica se a mensagem de sucesso √© exibida. Certifique-se de que os IDs dos campos correspondem aos do formul√°rio em teste. Adicione este comando ao arquivo commands.js para que esteja dispon√≠vel globalmente em todos os testes Cypress.

// Cypress.Commands.add('fillMandatoryFieldsAndSubmit', (data ) => {
//     cy.get('#firstName').type(data.firstName)
//     cy.get('#lastName').type(data.lastName)
//     cy.get('#email').type(data.email)
//     cy.get('#open-text-area').type(data.message)
//     cy.contains('Enviar').click()
// })

//‚ú¶ cypress/support/commands.js - vers√£o final com dados padr√£o para o comando customizado ‚ú¶ //

// ü§ñ Comando customizado para preencher os campos obrigat√≥rios e enviar o formul√°rio com dados padr√£o, mas permitindo a substitui√ß√£o desses dados.
//‚ùÑÔ∏é Uso: cy.fillMandatoryFieldsAndSubmit() ou cy.fillMandatoryFieldsAndSubmit({ firstName: 'Nome', lastName: 'Sobrenome', email: ' 
//‚ùÑÔ∏é Preenche os campos: Nome, Sobrenome, E-mail, Mensagem e clica no bot√£o Enviar. Depois, verifica se a mensagem de sucesso √© exibida. Certifique-se de que os IDs dos campos correspondem aos do formul√°rio em teste. Adicione este comando ao arquivo commands.js para que esteja dispon√≠vel globalmente em todos os testes Cypress.
//Quando nenhum dado √© passado, os valores padr√£o s√£o usados. Se um objeto com dados for fornecido, ele substituir√° os valores padr√£o conforme necess√°rio.

// Cypress.Commands.add('fillMandatoryFieldsAndSubmit', (data = {
//     firstName: 'Marinana',
//     lastName: 'Oliveira',
//     email: 'mariana@teste.com',
//     message: 'Padr√£0'
// } ) => {
//     cy.get('#firstName').type(data.firstName)
//     cy.get('#lastName').type(data.lastName)
//     cy.get('#email').type(data.email)
//     cy.get('#open-text-area').type(data.message)
//     cy.contains('Enviar').click()
// })

Cypress.Commands.add('fillMandatoryFieldsAndSubmit', (data = {
    firstName: 'Marinana',
    lastName: 'Oliveira',
    email: 'mariana@teste.com',
    message: 'Padr√£0'
} ) => {
    cy.get('#firstName').type(data.firstName)
    cy.get('#lastName').type(data.lastName)
    cy.get('#email').type(data.email)
    cy.get('#open-text-area').type(data.message)
    cy.contains('button', 'Enviar').click() // Outra forma de clicar no bot√£o Enviar usando cy.contains()
})


// ‚ú¶ Fim do arquivo commands.js ‚ú¶ //