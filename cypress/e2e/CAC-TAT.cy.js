//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste de validar t√≠tulo ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

//üë®‚Äçüè´ O bloco "describe" define a su√≠te de testes e o bloco "it" define o caso de teste.
describe('Central de Atendimento ao Cliente TAT', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('verifica o t√≠tulo da aplica√ß√£o', () => {

    cy.title().should('be.equal', 'Central de Atendimento ao Cliente TAT') //A assertion "should('be.equal', 'O T√çTULO ESPERADO')"" √© usada para comparar o valor retornado por "cy.title()"" com a string exata que voc√™ espera.
  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Testes de preenchimento de formul√°rio ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

describe('Preenche os campos obrigat√≥rios e envia o formul√°rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('preencher os campos corretamente', () => {

    // ‚ú¶ Preencher o campo nome ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle@teste.com')
    cy.get('@email')
      .should('have.value', 'michelle@teste.com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')

    // ‚ú¶ "Checkar" o tipo de atendimento "Elogio" ‚ú¶ //

    //üí° Nota: O comando .check() √© o preferido para checkboxes e radios, pois simula o comportamento real do usu√°rio e garante que os eventos corretos de mudan√ßa de estado sejam disparados, sem a necessidade de .click().

    // ü§ñ Localiza o elemento de input (radio button) que tem o valor 'elogio'
    cy.get('input[type="radio"][value="elogio"]')
      // 1. Usa o comando .check() para marcar/selecionar o radio button encontrado
      .check()
      // ü§ñ 2. Asser√ß√£o principal: Verifica se o elemento AGORA est√° marcado (confirma que o .check() funcionou)
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //

    // ü§ñ (confirma que o .check() funcionou)Localiza o elemento de input (checkbox) que tem o valor 'email'
    cy.get('input[type="checkbox"][value="email"]')
      // ü§ñ  1. Usa o comando .check() para marcar/selecionar o checkbox
      .check()
      // ü§ñ 2. Asser√ß√£o principal: Verifica se o elemento AGORA est√° marcado
      .should('be.checked')
      // ü§ñ 3. Asser√ß√£o secund√°ria (opcional): Confirma que o atributo 'value' √© 'email'(garante que a sele√ß√£o foi feita no campo correto)
      .and('have.value', 'email')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      //üí° Nota: O par√¢metro { delay: 0 } √© usado para eliminar o atraso padr√£o entre cada caractere digitado, acelerando o processo de digita√ß√£o no campo de texto.
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de sucesso √© exibida ‚ú¶ //
    cy.get('.success')
      .should('be.visible')
      //üí° Nota: A asser√ß√£o .and('contain', 'Mensagem enviada com sucesso.') verifica se o elemento cont√©m o texto espec√≠fico, garantindo que a mensagem correta seja exibida.
      .and('contain', 'Mensagem enviada com sucesso.')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste de formata√ß√£o inv√°lida -> E-mail ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //
describe('Preenche o campo e-mail com formata√ß√£o inv√°lida', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('preencher o campo e-mail com formata√ß√£o inv√°lida', () => {

    // ‚ú¶ Preencher o campo nome ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email com formata√ß√£o inv√°lida ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //
    cy.get('input[type="checkbox"][value="email"]')
      .check()
      .should('be.checked')
      .and('have.value', 'email')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida ‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste de preenchimento do campo telefone - Obrigat√≥rio ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //
describe('N√£o preencher o campo telefone - campo obrigat√≥rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('selecionar checkbox "Telefone" e n√£o preencher o campo que deve se tornar obrigat√≥rio', () => {

    // ‚ú¶ Preencher o campo nome ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "Telefone" ‚ú¶ //
    cy.get('input[type="checkbox"][value="phone"]')
      .check()
      .should('be.checked')
      .and('have.value', 'phone')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida - telefone obrigat√≥rio‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste de preenchimento do campo telefone - Valor n√£o num√©rico ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //
describe('Preenche o campo telefone com elementos n√£o num√©ricos', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('preencher o campo "Telefone" com valores n√£o num√©ricos', () => {

    // ‚ú¶ Preencher o campo nome ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Preencher o campo telefone com valores n√£o num√©ricos ‚ú¶ // 
    cy.get('#phone')
      .as('telefone')
      .should('be.visible')
      .type('abcdefghij')
    cy.get('@telefone')
      .should('have.value', '')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste valida√ß√£o de campo obrogat√≥rio - Campo Telefone ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

describe('Preenche o campo telefone com elementos n√£o num√©ricos', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('Validar label "Obrigat√≥rio" quando o checkbox telefone for selecionado', () => {

    // ‚ú¶ Preencher o campo nome ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "Telefone" ‚ú¶ //
    cy.get('input[type="checkbox"][value="phone"]')
      .check()
      .should('be.checked')
      .and('have.value', 'phone')

    // ‚ú¶ O label "Telefone (Obrigat√≥rio)" deve estar vis√≠vel ‚ú¶ //
    cy.get('label[for="phone"]')
      .should('be.visible')
      .and('contain', 'Telefone (obrigat√≥rio)')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste sem preencher campo obrigat√≥rio - Nome ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

describe('N√£o preencher o campo nome - campo obrigat√≥rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('N√£o preencher campo nome - Campo Obrigat√≥rio', () => {

    // ‚ú¶ N√£o preencher o campo "Nome" ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .clear()
    cy.get('@nome')
      .should('have.value', '')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Santos!')
    cy.get('@sobrenome')
      .should('have.value', 'Santos!')

    // ‚ú¶ Preencher o campo email com formata√ß√£o inv√°lida ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //
    cy.get('input[type="checkbox"][value="email"]')
      .check()
      .should('be.checked')
      .and('have.value', 'email')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida ‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste sem preencher campo obrigat√≥rio - Sobrenome ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

describe('N√£o preencher o campo sobrenome - campo obrigat√≥rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('N√£o preencher campo sobrenome - Campo Obrigat√≥rio', () => {

    // ‚ú¶ Preencher o campo "Nome" ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ N√£o preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .clear()
    cy.get('@sobrenome')
      .should('have.value', '')

    // ‚ú¶ Preencher o campo email com formata√ß√£o inv√°lida ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //
    cy.get('input[type="checkbox"][value="email"]')
      .check()
      .should('be.checked')
      .and('have.value', 'email')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida ‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste sem preencher campo obrigat√≥rio - E-mail ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è //

describe('N√£o preencher o campo e-mail - campo obrigat√≥rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('N√£o preencher campo e-mail - Campo Obrigat√≥rio', () => {

    // ‚ú¶ Preencher o campo "Nome" ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Monteiro')
    cy.get('@sobrenome')
      .should('have.value', 'Monteiro')

    // ‚ú¶ N√£o preencher o campo e-mail - campo obrigat√≥rio ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .clear()
    cy.get('@email')
      .should('have.value', '')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //
    cy.get('input[type="checkbox"][value="email"]')
      .check()
      .should('be.checked')
      .and('have.value', 'email')

    // ‚ú¶ Preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .type('Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem', { delay: 0 })
    cy.get('@mensagem')
      .should('have.value', 'Sempre atenderam muito bem minhas solicita√ß√µes. Teste de preenchimento do campo mensagem')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida ‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

//‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è Teste n√£o preencher a mensagem - Campo Obrigat√≥rio ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è // 

describe('N√£o preencher o campo mensagem - campo obrigat√≥rio', () => {

  beforeEach(() => {
    cy.visit('./src/index.html')
  })

  it('N√£o preencher campo mensagem - Campo Obrigat√≥rio', () => {

    // ‚ú¶ Preencher o campo "Nome" ‚ú¶ //
    cy.get('input[name="firstName"]')
      .as('nome')
      .should('be.visible')
      .type('Michelle')
    cy.get('@nome')
      .should('have.value', 'Michelle')

    // ‚ú¶ Preencher o campo sobrenome ‚ú¶ //
    cy.get('input[name="lastName"]')
      .as('sobrenome')
      .should('be.visible')
      .type('Monteiro')
    cy.get('@sobrenome')
      .should('have.value', 'Monteiro')

    // ‚ú¶ Preencher o campo e-mail ‚ú¶ //
    cy.get('#email')
      .as('email')
      .should('be.visible')
      .type('michelle.teste@com')
    cy.get('@email')
      .should('have.value', 'michelle.teste@com')

    // ‚ú¶ Selecionar o produto "Blog" da lista de sele√ß√£o ‚ú¶ //
    cy.get('#product')
      .select('blog')
      .should('have.value', 'blog')
    cy.get('input[type="radio"][value="elogio"]')
      .check()
      .should('be.checked')

    // ‚ú¶ "Checkar" o meio de contato "E-mail" ‚ú¶ //
    cy.get('input[type="checkbox"][value="email"]')
      .check()
      .should('be.checked')
      .and('have.value', 'email')

    // ‚ú¶ N√£o preencher o campo "Mensagem" ‚ú¶ //
    cy.get('textarea[name="open-text-area"]')
      .as('mensagem')
      .should('be.visible')
      .clear()
    cy.get('@mensagem')
      .should('have.value', '')

    // ‚ú¶ Clicar no bot√£o "Enviar" ‚ú¶ //
    cy.get('button[type="submit"]')
      .as('botaoEnviar')
      .should('be.visible')
      .click()

    // ‚ú¶ Verificar se a mensagem de erro √© exibida ‚ú¶ //
    cy.get('.error')
      .should('be.visible')
      .and('contain', 'Valide os campos obrigat√≥rios!')

  })
})

